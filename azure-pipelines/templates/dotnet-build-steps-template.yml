parameters:
  - name: buildConfiguration
    type: string
    default: 'Release'
  - name: buildPlatform
    type: string
    default: 'Any CPU'
  - name: testProjectPath
    type: string
    default: './DotnetTemplate.Tests/DotnetTemplate.Tests.csproj'
  - name: projectPath
    type: string
    default: './DotnetTemplate/DotnetTemplate.csproj'

steps:
  - checkout: self
    fetchDepth: 0

  - task: gitversion/setup@0
    displayName: 'GitVersion Setup'
    inputs:
      versionSpec: '5.9.x'

  - task: gitversion/execute@0
    displayName: 'GitVersion Execute'
    inputs:
      updateAssemblyInfo: true

  - bash: echo $Action$BuildVersion
    displayName: 'Set Build Version'
    env:
      Action: '##vso[build.updatebuildnumber]'
      BuildVersion: $(GitVersion.SemVer)

  - task: UseDotNet@2
    displayName: 'Install .NET 6.x SDK'
    inputs:
      packageType: sdk
      version: 6.x

  - task: DotNetCoreCLI@2
    displayName: 'Dotnet Restore'
    inputs:
      command: 'restore'
      arguments: '--verbosity minimal'

  - task: DotNetCoreCLI@2
    displayName: 'Dotnet build $(buildConfiguration)'
    inputs:
      command: 'build'
      arguments: '--configuration $(buildConfiguration) --no-restore'

  - task: DotNetCoreCLI@2
    displayName: 'Run unit tests'
    inputs:
      command: 'test'
      projects: 'DotnetTemplate.Tests/DotnetTemplate.Tests.csproj'
      arguments: '--no-restore --collect:"XPlat Code Coverage" --settings azure-pipelines/coverage.runsettings'

  - task: DotNetCoreCLI@2
    displayName: 'Dotnet Publish'
    inputs:
      command: 'publish'
      publishWebProjects: false
      projects: '$(projectPath)'
      arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration) --no-build'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifacts'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'
      publishLocation: 'Container'